name: 'C++ CI'

on: 
  push:
    branches:
      - main

jobs:
  build_windows:
  runs-on: windows-latest
  permissions: write-all
  steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        refreshenv
    
    - name: Install SFML dependencies (Windows)
      run: |
        choco install -y cmake
        choco install -y vcredist2019  # Для Visual C++ Redistributable
    
    - name: Download and extract SFML
      run: |
        $url = "https://www.sfml-dev.org/files/SFML-2.5.1-windows-vc15-64-bit.zip"
        Invoke-WebRequest -Uri $url -OutFile sfml.zip
        Expand-Archive -Path sfml.zip -DestinationPath C:/SFML-2.5.1
        echo "SFML_ROOT=C:/SFML-2.5.1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    
    - name: Configure CMake (Windows)
      run: |
        cmake . `
          -DPATCH_VERSION=${{ github.run_number }} `
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install `
          -DSFML_ROOT="C:/SFML-2.5.1" `
          -A x64
    
    - name: Build and Install (Windows)
      run: cmake --build . --config Release --target install
    
    - name: Create ZIP package (Windows)
      run: cpack -G ZIP
    
    - name: Run Tests (Windows)
      run: ctest -C Release --output-on-failure || exit 1
    
    - name: Create Release (Windows)
      id: create_release_windows
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }} (Windows)
        draft: false
        prerelease: false
    
    - name: Upload Release Asset (Windows)
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
        asset_path: ./physics-0.0.${{ github.run_number }}-win64.zip
        asset_name: physics-0.0.${{ github.run_number }}-win64.zip
        asset_content_type: application/zip

  build_ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get install libsfml-dev    
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target package
      - name: List files (ubuntu)
        run: ls
      - name: Create Release (ubuntu)
        id: create_release_ubuntu
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ubuntu${{ github.run_number }}
          release_name: Release ${{ github.run_number }} (ubuntu)
          draft: false
          prerelease: false 
      - name: Upload Release Asset (ubuntu)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
          asset_path: ./physics-0.0.${{ github.run_number }}-Linux.zip
          asset_name: physics-0.0.${{ github.run_number }}-Linux.zip
          asset_content_type: application/zip