name: 'C++ CI'

on: 
  push:
    branches:
      - main

jobs:
  build_windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        refreshenv
    
    - name: Install build tools
      run: |
        choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install -y vcredist2019
    
    - name: Download SFML
      run: |
        $url = "https://www.sfml-dev.org/files/SFML-2.5.1-windows-vc15-64-bit.zip"
        Invoke-WebRequest -Uri $url -OutFile sfml.zip
        Expand-Archive -Path sfml.zip -DestinationPath C:/SFML
        echo "SFML_ROOT=C:/SFML" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    
    - name: Configure CMake
      run: |
        cmake . `
          -DPATCH_VERSION=${{ github.run_number }} `
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install `
          -DSFML_ROOT="C:/SFML" `
          -A x64
    
    - name: Build project
      run: cmake --build . --config Release --target install
    
    - name: Create package
      run: cpack -G ZIP
    
    - name: Run tests
      run: ctest -C Release --output-on-failure || exit 1
    
    - name: Create Windows Release
      id: create_release_windows
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: win-${{ github.run_number }}
        release_name: Windows Release ${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Windows Asset
      id: upload-windows-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
        asset_path: ./physics-0.0.${{ github.run_number }}-win64.zip
        asset_name: physics-0.0.${{ github.run_number }}-win64.zip
        asset_content_type: application/zip

  build_ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y libsfml-dev cmake
    
    - name: Configure CMake
      run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DCMAKE_INSTALL_PREFIX=$(pwd)/install
    
    - name: Build project
      run: cmake --build . --target install
    
    - name: Create package
      run: cpack -G ZIP
    
    - name: Run tests
      run: ctest --output-on-failure || exit 1
    
    - name: Create Ubuntu Release
      id: create_release_ubuntu
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ubuntu-${{ github.run_number }}
        release_name: Ubuntu Release ${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Ubuntu Asset
      id: upload-ubuntu-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
        asset_path: ./physics-0.0.${{ github.run_number }}-Linux.zip
        asset_name: physics-0.0.${{ github.run_number }}-Linux.zip
        asset_content_type: application/zip